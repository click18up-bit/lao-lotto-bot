/**
 * Lao Lotto Bot - Full System (Production)
 * - User: start guessing, check latest results
 * - Admin: enter results, system management
 * - Cron: remind (20:30) & announce (21:00) Mon/Wed/Fri, auto clear bets
 * - Webhook for Render
 */
const express = require("express");
const mongoose = require("mongoose");
const TelegramBot = require("node-telegram-bot-api");
const cron = require("node-cron");

/* ===== ENV ===== */
const BOT_TOKEN = process.env.BOT_TOKEN;
const MONGO_URI = process.env.MONGO_URI;
const TARGET_GROUP_ID = process.env.TARGET_GROUP_ID; // e.g. -1001234567890
const SUPER_ADMIN_ID = (process.env.SUPER_ADMIN_ID || "").toString();
const EDITOR_IDS = (process.env.EDITOR_IDS || "").split(",").map(x => x.trim()).filter(Boolean);
const RENDER_EXTERNAL_URL = process.env.RENDER_EXTERNAL_URL;
const TZ = "Asia/Bangkok";

/* ===== Guards ===== */
if (!BOT_TOKEN) throw new Error("BOT_TOKEN is required");
if (!MONGO_URI) console.warn("‚ö†Ô∏è MONGO_URI missing");
if (!RENDER_EXTERNAL_URL) console.warn("‚ö†Ô∏è RENDER_EXTERNAL_URL missing - webhook won't be set");

/* ===== Setup ===== */
const app = express();
app.use(express.json());
const bot = new TelegramBot(BOT_TOKEN, { webHook: true });

/* ===== DB Schemas ===== */
const BetSchema = new mongoose.Schema({
  userId: String,
  username: String,
  name: String,
  number: String, // 2-4 digits
  round: String,  // yyyy-mm-dd
  createdAt: { type: Date, default: Date.now }
});
BetSchema.index({ userId: 1, round: 1 }, { unique: true });
const Bet = mongoose.model("Bet", BetSchema);

const ResultSchema = new mongoose.Schema({
  round: { type: String, unique: true },
  top4: String,
  top3: String,
  top2: String,
  createdAt: { type: Date, default: Date.now },
  isPublished: { type: Boolean, default: false } // ‚úÖ Patch 1
});
ResultSchema.index({ round: 1 });
const Result = mongoose.model("Result", ResultSchema);

/* ===== Connect DB ===== */
mongoose.connect(MONGO_URI)
  .then(() => console.log("‚úÖ MongoDB Connected"))
  .catch(err => console.error("‚ùå MongoDB Error:", err));
/* ===== Helpers ===== */
function isAdmin(userId) {
  return userId == SUPER_ADMIN_ID || EDITOR_IDS.includes(String(userId));
}
function getRoundDate() {
  const now = new Date();
  const y = new Intl.DateTimeFormat("en-CA", { timeZone: TZ, year: "numeric" }).format(now);
  const m = new Intl.DateTimeFormat("en-CA", { timeZone: TZ, month: "2-digit" }).format(now);
  const d = new Intl.DateTimeFormat("en-CA", { timeZone: TZ, day: "2-digit" }).format(now);
  return `${y}-${m}-${d}`;
}
function prettyLabel(user) {
  return user.username ? `@${user.username}` : (user.name ? user.name : `id${user.userId}`);
}
function prettyList(users, suffix = "") {
  if (!users || users.length === 0) return "‚ùå ‡∫ö‡ªç‡ªà‡∫°‡∫µ";
  return users.map(u => suffix ? `${prettyLabel(u)} (${suffix})` : prettyLabel(u)).join(", ");
}
function mainMenuKeyboard(isAdminUser=false) {
  const user = [
    [{ text: "üé≤ ‡ªÄ‡∫•‡∫µ‡ªà‡∫°‡∫ó‡∫≤‡∫ç‡ªÄ‡∫•‡∫Å" }],
    [{ text: "üîç ‡∫Å‡∫ß‡∫î‡∫ú‡∫ª‡∫ô‡∫´‡∫ß‡∫ç" }]
  ];
  const admin = [
    [{ text: "üìù ‡∏Å‡∏£‡∏≠‡∏Å‡∏ú‡∏•‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•" }],
    [{ text: "üìä ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏£‡∏∞‡∏ö‡∏ö" }]
  ];
  return { keyboard: isAdminUser ? user.concat(admin) : user, resize_keyboard: true, one_time_keyboard: false };
}
function adminMenuKeyboard() {
  return {
    keyboard: [
      [{ text: "üë• ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏ô‡∏ó‡∏≤‡∏¢‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ" }],
      [{ text: "üìù ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÇ‡∏û‡∏¢‡∏£‡∏≠‡∏ö‡∏ô‡∏µ‡πâ" }],
      [{ text: "‚ôªÔ∏è ‡∏£‡∏µ‡πÄ‡∏ã‡∏ï‡πÇ‡∏û‡∏¢‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ" }],
      [{ text: "üóë ‡∏£‡∏µ‡πÄ‡∏ã‡∏ï‡πÇ‡∏û‡∏¢‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î" }],
      [{ text: "üóë ‡∏•‡πâ‡∏≤‡∏á‡∏ú‡∏•‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î" }],
      [{ text: "‚úèÔ∏è ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÄ‡∏•‡∏Ç‡∏¢‡∏π‡∏™" }],
      [{ text: "‚¨ÖÔ∏è ‡∏Å‡∏•‡∏±‡∏ö‡πÄ‡∏°‡∏ô‡∏π‡∏´‡∏•‡∏±‡∏Å" }]
    ],
    resize_keyboard: true,
    one_time_keyboard: false
  };
}

/* ===== /start ===== */
bot.onText(/\/start/, (msg) => {
  const chatId = msg.chat.id;
  const userId = msg.from.id.toString();
  bot.sendMessage(chatId, isAdmin(userId) ? "üëë ‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô!" : "üëã ‡∫™‡∫∞‡∫ö‡∫≤‡∫ç‡∫î‡∫µ!", {
    reply_markup: mainMenuKeyboard(isAdmin(userId))
  });
});
/* ===== Message Handler ===== */
bot.on("message", async (msg) => {
  const chatId = msg.chat.id;
  const text = (msg.text || "").trim();
  const userId = (msg.from?.id || "").toString();
  const username = msg.from?.username || "";
  const name = msg.from?.first_name || "";

  if (!text || text === "/start") return;

  /* User: start guessing */
  if (text === "üé≤ ‡ªÄ‡∫•‡∫µ‡ªà‡∫°‡∫ó‡∫≤‡∫ç‡ªÄ‡∫•‡∫Å") {
    bot.sendMessage(chatId, `üé≤ ‡∫Æ‡∫≠‡∫ö‡ªÉ‡ªù‡ªà‡ªÄ‡∫•‡∫µ‡ªà‡∫°‡∫ï‡∫ª‡ªâ‡∫ô!

üìú ‡∫Å‡∫ª‡∫î‡∫Å‡∫≤:
1Ô∏è‚É£ ‡∫ó‡∫≤‡∫ç‡ªÑ‡∫î‡ªâ‡∫Ñ‡∫±‡ªâ‡∫á‡∫î‡∫Ω‡∫ß‡∫ï‡ªç‡ªà‡∫Æ‡∫≠‡∫ö
2Ô∏è‚É£ ‡∫û‡∫¥‡∫°‡ªÄ‡∫•‡∫Å 2, 3 ‡∫´‡∫º‡∫∑ 4 ‡∫ï‡∫ª‡∫ß

üèÜ ‡∫•‡∫≤‡∫á‡∫ß‡∫±‡∫ô:
üëë 4 ‡∫ï‡∫ª‡∫ß‡∫ï‡∫ª‡∫á ‚ûù 20,000 ‡ªÄ‡∫Ñ‡∫£‡∫î‡∫¥‡∫î
ü•á 3 ‡∫ï‡∫ª‡∫ß‡∫ö‡∫ô ‚ûù 5,000 ‡ªÄ‡∫Ñ‡∫£‡∫î‡∫¥‡∫î
‚¨ÜÔ∏è 2 ‡∫ï‡∫ª‡∫ß‡∫ö‡∫ô ‚ûù 500 ‡ªÄ‡∫Ñ‡∫£‡∫î‡∫¥‡∫î

üìÖ ‡∫õ‡∫∞‡∫Å‡∫≤‡∫î‡∫ú‡∫ª‡∫ô: 21:00 ‡ªÇ‡∫°‡∫á
üï£ ‡∫õ‡∫¥‡∫î‡∫Æ‡∫±‡∫ö: 20:25 ‡ªÇ‡∫°‡∫á
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
üéØ ‡∫û‡∫¥‡∫°‡ªÄ‡∫•‡∫Å 2, 3 ‡∫´‡∫º‡∫∑ 4 ‡∫ï‡∫ª‡∫ß ‡ªÄ‡∫û‡∫∑‡ªà‡∫≠‡∫Æ‡ªà‡∫ß‡∫°‡∫™‡∫ª‡∫ô‡∫∏‡∫Å`);
    return;
  }

  /* User: check results */
  if (text === "üîç ‡∫Å‡∫ß‡∫î‡∫ú‡∫ª‡∫ô‡∫´‡∫ß‡∫ç") {
    const last = await Result.findOne({ isPublished: true }).sort({ createdAt: -1 });
    if (!last) {
      bot.sendMessage(chatId, "‚è≥ ‡∫ç‡∫±‡∫á‡∫ö‡ªç‡ªà‡∫°‡∫µ‡∫ú‡∫ª‡∫ô‡∫Æ‡∫≠‡∫ö‡∫•‡ªà‡∫≤‡∫™‡∫∏‡∫î");
      return;
    }
    const round = last.round;
    const winners4 = await Bet.find({ number: last.top4, round, userId: { $nin: [SUPER_ADMIN_ID, ...EDITOR_IDS] } });
    const winners3 = await Bet.find({ number: last.top3, round, userId: { $nin: [SUPER_ADMIN_ID, ...EDITOR_IDS] } });
    const winners2 = await Bet.find({ number: last.top2, round, userId: { $nin: [SUPER_ADMIN_ID, ...EDITOR_IDS] } });

    const CREDIT4 = "20,000 ‡ªÄ‡∫Ñ‡∫£‡∫î‡∫¥‡∫î";
    const CREDIT3 = "5,000 ‡ªÄ‡∫Ñ‡∫£‡∫î‡∫¥‡∫î";
    const CREDIT2 = "500 ‡ªÄ‡∫Ñ‡∫£‡∫î‡∫¥‡∫î";

    let msgResult = `üèÜ ‡∫ú‡∫ª‡∫ô‡∫´‡∫ß‡∫ç‡∫õ‡∫∞‡∫à‡∫≥‡∫ß‡∫±‡∫ô ${round}\n‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n\n` +
                    `üèÜ ‡∫•‡∫≤‡∫á‡∫ß‡∫±‡∫ô:\n` +
                    `üëë 4 ‡∫ï‡∫ª‡∫ß‡∫ï‡∫ª‡∫á ‚ûù ${CREDIT4}\n` +
                    `ü•á 3 ‡∫ï‡∫ª‡∫ß‡∫ö‡∫ô ‚ûù ${CREDIT3}\n` +
                    `‚¨ÜÔ∏è 2 ‡∫ï‡∫ª‡∫ß‡∫ö‡∫ô ‚ûù ${CREDIT2}\n\n` +
                    `üëë 4 ‡∫ï‡∫ª‡∫ß: ${last.top4}\n` +
                    (winners4.length ? `üéØ ${prettyList(winners4, CREDIT4)}\n\n` : `üéØ ‚ùå ‡∫ö‡ªç‡ªà‡∫°‡∫µ\n\n`) +
                    `ü•á 3 ‡∫ï‡∫ª‡∫ß: ${last.top3}\n` +
                    (winners3.length ? `üéØ ${prettyList(winners3, CREDIT3)}\n\n` : `üéØ ‚ùå ‡∫ö‡ªç‡ªà‡∫°‡∫µ\n\n`) +
                    `‚¨ÜÔ∏è 2 ‡∫ï‡∫ª‡∫ß: ${last.top2}\n` +
                    (winners2.length ? `üéØ ${prettyList(winners2, CREDIT2)}\n\n` : `üéØ ‚ùå ‡∫ö‡ªç‡ªà‡∫°‡∫µ\n\n`) +
                    `‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n‚ú® ‡∫Ç‡ªç‡ªÉ‡∫´‡ªâ‡ªÇ‡∫ä‡∫Å‡∫î‡∫µ‡ªÉ‡∫ô‡∫Æ‡ªà‡∫≠‡∫ö‡ªú‡ªâ‡∫≤!`;
    bot.sendMessage(chatId, msgResult);
    return;
  }

  /* Admin: enter result */
  if (text === "üìù ‡∏Å‡∏£‡∏≠‡∏Å‡∏ú‡∏•‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•" && isAdmin(userId)) {
    bot.sendMessage(chatId, "‚úçÔ∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏û‡∏¥‡∏°‡∏û‡πå‡πÄ‡∏•‡∏Ç 4 ‡∏´‡∏•‡∏±‡∏Å (‡πÄ‡∏ä‡πà‡∏ô 1234)");
    bot.once("message", async (res) => {
      const rtext = (res.text || "").trim();
      if (!/^\d{4}$/.test(rtext)) {
        bot.sendMessage(chatId, "‚ö†Ô∏è ‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏•‡∏Ç 4 ‡∏´‡∏•‡∏±‡∏Å");
        return;
      }
      const round = getRoundDate();
      const exist = await Result.findOne({ round });
      if (exist) {
        bot.sendMessage(chatId, "‚ö†Ô∏è ‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡∏°‡∏µ‡∏ú‡∏•‡πÅ‡∏•‡πâ‡∏ß");
        return;
      }
      const top4 = rtext;
      const top3 = rtext.slice(-3);
      const top2 = rtext.slice(-2);
      await Result.create({ round, top4, top3, top2, isPublished: false });
      bot.sendMessage(chatId, `‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ú‡∏• ${top4} (3 ‡∏ï‡∏±‡∏ß: ${top3}, 2 ‡∏ï‡∏±‡∏ß: ${top2})\nüì¢ ‡∏à‡∏∞‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡πÄ‡∏ß‡∏•‡∏≤ 21:00`);
    });
    return;
  }
  /* Admin: system menu */
  if (text === "üìä ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏£‡∏∞‡∏ö‡∏ö" && isAdmin(userId)) {
    bot.sendMessage(chatId, "üìä ‡πÄ‡∏°‡∏ô‡∏π‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏£‡∏∞‡∏ö‡∏ö", { reply_markup: adminMenuKeyboard() });
    return;
  }

  if (text === "üë• ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏ô‡∏ó‡∏≤‡∏¢‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ" && isAdmin(userId)) {
    const round = getRoundDate();
    const users = await Bet.distinct("userId", { round });
    bot.sendMessage(chatId, `üë• ‡∏°‡∏µ‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏ó‡∏≤‡∏¢‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ: ${users.length} ‡∏Ñ‡∏ô`);
    return;
  }

  if (text === "üìù ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÇ‡∏û‡∏¢‡∏£‡∏≠‡∏ö‡∏ô‡∏µ‡πâ" && isAdmin(userId)) {
    const round = getRoundDate();
    const count = await Bet.countDocuments({ round });
    bot.sendMessage(chatId, `üìù ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÇ‡∏û‡∏¢‡∏ó‡∏µ‡πà‡∏ó‡∏≤‡∏¢‡πÉ‡∏ô‡∏£‡∏≠‡∏ö‡∏ô‡∏µ‡πâ: ${count} ‡πÇ‡∏û‡∏¢`);
    return;
  }

  if (text === "‚ôªÔ∏è ‡∏£‡∏µ‡πÄ‡∏ã‡∏ï‡πÇ‡∏û‡∏¢‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ" && isAdmin(userId)) {
    const round = getRoundDate();
    await Bet.deleteMany({ round });
    bot.sendMessage(chatId, "‚ôªÔ∏è ‡∏£‡∏µ‡πÄ‡∏ã‡∏ï‡πÇ‡∏û‡∏¢‡∏Ç‡∏≠‡∏á‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß");
    return;
  }

  if (text === "üóë ‡∏£‡∏µ‡πÄ‡∏ã‡∏ï‡πÇ‡∏û‡∏¢‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î" && isAdmin(userId)) {
    await Bet.deleteMany({});
    bot.sendMessage(chatId, "üóë ‡∏£‡∏µ‡πÄ‡∏ã‡∏ï‡πÇ‡∏û‡∏¢‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß");
    return;
  }

  if (text === "üóë ‡∏•‡πâ‡∏≤‡∏á‡∏ú‡∏•‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î" && isAdmin(userId)) {
    await Result.deleteMany({});
    bot.sendMessage(chatId, "üóë ‡∏•‡πâ‡∏≤‡∏á‡∏ú‡∏•‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß");
    return;
  }

  if (text === "‚úèÔ∏è ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÄ‡∏•‡∏Ç‡∏¢‡∏π‡∏™" && isAdmin(userId)) {
    bot.sendMessage(chatId, "‚úèÔ∏è ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö: userId,‡πÄ‡∏•‡∏Ç‡πÉ‡∏´‡∏°‡πà (‡πÄ‡∏ä‡πà‡∏ô: 123456789,5678)");
    bot.once("message", async (res) => {
      const [uid, newNumber] = (res.text || "").split(",").map(s => (s||"").trim());
      if (!uid || !/^\d{2,4}$/.test(newNumber)) {
        bot.sendMessage(chatId, "‚ö†Ô∏è ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á (‡πÄ‡∏ä‡πà‡∏ô: 123456789,5678)");
        return;
      }
      const round = getRoundDate();
      const updated = await Bet.updateOne({ userId: uid, round }, { $set: { number: newNumber } });
      if (updated.modifiedCount > 0) {
        bot.sendMessage(chatId, `‚úÖ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÄ‡∏•‡∏Ç‡∏Ç‡∏≠‡∏á userId ${uid} ‡πÄ‡∏õ‡πá‡∏ô ${newNumber} ‡πÅ‡∏•‡πâ‡∏ß`);
      } else {
        bot.sendMessage(chatId, `‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÇ‡∏û‡∏¢‡∏Ç‡∏≠‡∏á userId ${uid} ‡πÉ‡∏ô‡∏£‡∏≠‡∏ö‡∏ô‡∏µ‡πâ`);
      }
    });
    return;
  }

  if (text === "‚¨ÖÔ∏è ‡∏Å‡∏•‡∏±‡∏ö‡πÄ‡∏°‡∏ô‡∏π‡∏´‡∏•‡∏±‡∏Å" && isAdmin(userId)) {
    bot.sendMessage(chatId, "‚¨ÖÔ∏è ‡∏Å‡∏•‡∏±‡∏ö‡πÄ‡∏°‡∏ô‡∏π‡∏´‡∏•‡∏±‡∏Å‡πÅ‡∏•‡πâ‡∏ß", {
      reply_markup: mainMenuKeyboard(true)
    });
    return;
  }

 /* User sends a guess number */
if (/^\d{2,4}$/.test(text)) {
  const round = getRoundDate();
  const guess = text;

  bot.sendMessage(chatId, `üé≤ ‡∫ó‡ªà‡∫≤‡∫ô‡∫ó‡∫≤‡∫ç‡ªÄ‡∫•‡∫Å: ${guess}\n‡∫ï‡ªâ‡∫≠‡∫á‡∫Å‡∫≤‡∫ô‡∫¢‡∫∑‡∫ô‡∫¢‡∫±‡∫ô‡∫ö‡ªç?`, {
    reply_markup: {
      inline_keyboard: [
        [
          { text: "‚úÖ ‡∫¢‡∫∑‡∫ô‡∫¢‡∫±‡∫ô", callback_data: `confirm_${round}_${guess}` },
          { text: "‚ùå ‡∫ç‡∫ª‡∫Å‡ªÄ‡∫•‡∫µ‡∫Å", callback_data: `cancel_${round}_${guess}` }
        ]
      ]
    }
  });
}

/* ===== Inline Button Handler ===== */
bot.on("callback_query", async (cbq) => {
  const data = cbq.data;
  const msg = cbq.message;
  const chatId = msg.chat.id;
  const userId = cbq.from.id.toString();
  const username = cbq.from.username || "";
  const name = cbq.from.first_name || "";

  if (data.startsWith("confirm_")) {
    const [, round, guess] = data.split("_");
    try {
      await Bet.create({ userId, username, name, number: guess, round });
      bot.sendMessage(chatId, `‚úÖ ‡∫¢‡∫∑‡∫ô‡∫¢‡∫±‡∫ô‡∫™‡∫≥‡ªÄ‡∫•‡∫±‡∫î! ‡∫ö‡∫±‡∫ô‡∫ó‡∫∂‡∫Å‡ªÄ‡∫•‡∫Å ${guess} ‡∫Ç‡∫≠‡∫á‡∫ó‡ªà‡∫≤‡∫ô‡ªÅ‡∫•‡ªâ‡∫ß`);
    } catch (e) {
      if (e && e.code === 11000) {
        bot.sendMessage(chatId, "‚ö†Ô∏è ‡∫ó‡ªà‡∫≤‡∫ô‡ªÑ‡∫î‡ªâ‡∫ó‡∫≤‡∫ç‡ªÅ‡∫•‡ªâ‡∫ß‡ªÉ‡∫ô‡∫Æ‡∫≠‡∫ö‡∫ô‡∫µ‡ªâ");
      } else {
        bot.sendMessage(chatId, "‚ùå ‡ªÄ‡∫Å‡∫µ‡∫î‡∫Ç‡ªç‡ªâ‡∫ú‡∫¥‡∫î‡∫û‡∫≤‡∫î ‡∫•‡∫≠‡∫á‡ªÉ‡ªù‡ªà‡∫≠‡∫µ‡∫Å‡∫Ñ‡∫±‡ªâ‡∫á");
      }
    }
  }

  if (data.startsWith("cancel_")) {
    bot.sendMessage(chatId, "‚ùå ‡∫ç‡∫ª‡∫Å‡ªÄ‡∫•‡∫µ‡∫Å‡∫Å‡∫≤‡∫ô‡∫ó‡∫≤‡∫ç‡ªÄ‡∫•‡∫Å‡ªÅ‡∫•‡ªâ‡∫ß");
  }

  bot.answerCallbackQuery(cbq.id);
});

/* ===== CRON Jobs ===== */
cron.schedule("30 20 * * 1,3,5", async () => {
  const admins = [SUPER_ADMIN_ID, ...EDITOR_IDS].filter(Boolean);
  for (const id of admins) {
    await bot.sendMessage(id, "‚è∞ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ú‡∏•‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•‡∏Å‡πà‡∏≠‡∏ô 21:00 ‡∏ô. (‡∏Å‡∏î üìù ‡∏Å‡∏£‡∏≠‡∏Å‡∏ú‡∏•‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•)");
  }
}, { timezone: TZ });

cron.schedule("0 21 * * 1,3,5", async () => {
  const round = getRoundDate();
  const result = await Result.findOne({ round }).sort({ createdAt: -1 });
  if (!result) {
    await bot.sendMessage(TARGET_GROUP_ID, "‚ö†Ô∏è ‡∫ç‡∫±‡∫á‡∫ö‡ªç‡ªà‡∫°‡∫µ‡∫ú‡∫ª‡∫ô‡∫Æ‡∫≠‡∫ö‡∫ô‡∫µ‡ªâ");
    return;
  }
  result.isPublished = true; // ‚úÖ Patch 2
  await result.save();

  const winners4 = await Bet.find({ number: result.top4, round, userId: { $nin: [SUPER_ADMIN_ID, ...EDITOR_IDS] } });
  const winners3 = await Bet.find({ number: result.top3, round, userId: { $nin: [SUPER_ADMIN_ID, ...EDITOR_IDS] } });
  const winners2 = await Bet.find({ number: result.top2, round, userId: { $nin: [SUPER_ADMIN_ID, ...EDITOR_IDS] } });

  const CREDIT4 = "20,000 ‡ªÄ‡∫Ñ‡∫£‡∫î‡∫¥‡∫î";
  const CREDIT3 = "5,000 ‡ªÄ‡∫Ñ‡∫£‡∫î‡∫¥‡∫î";
  const CREDIT2 = "500 ‡ªÄ‡∫Ñ‡∫£‡∫î‡∫¥‡∫î";

  let msg = `üèÜ ‡∫ú‡∫ª‡∫ô‡∫´‡∫ß‡∫ç‡∫õ‡∫∞‡∫à‡∫≥‡∫ß‡∫±‡∫ô ${round}\n‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n\n` +
            `üèÜ ‡∫•‡∫≤‡∫á‡∫ß‡∫±‡∫ô:\n` +
            `üëë 4 ‡∫ï‡∫ª‡∫ß‡∫ï‡∫ª‡∫á ‚ûù ${CREDIT4}\n` +
            `ü•á 3 ‡∫ï‡∫ª‡∫ß‡∫ö‡∫ô ‚ûù ${CREDIT3}\n` +
            `‚¨ÜÔ∏è 2 ‡∫ï‡∫ª‡∫ß‡∫ö‡∫ô ‚ûù ${CREDIT2}\n\n` +
            `üëë 4 ‡∫ï‡∫ª‡∫ß: ${result.top4}\n` +
            (winners4.length ? `üéØ ${prettyList(winners4, CREDIT4)}\n\n` : `üéØ ‚ùå ‡∫ö‡ªç‡ªà‡∫°‡∫µ\n\n`) +
            `ü•á 3 ‡∫ï‡∫ª‡∫ß: ${result.top3}\n` +
            (winners3.length ? `üéØ ${prettyList(winners3, CREDIT3)}\n\n` : `üéØ ‚ùå ‡∫ö‡ªç‡ªà‡∫°‡∫µ\n\n`) +
            `‚¨ÜÔ∏è 2 ‡∫ï‡∫ª‡∫ß: ${result.top2}\n` +
            (winners2.length ? `üéØ ${prettyList(winners2, CREDIT2)}\n\n` : `üéØ ‚ùå ‡∫ö‡ªç‡ªà‡∫°‡∫µ\n\n`) +
            `‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\nüéâ ‡∫ç‡∫¥‡∫ô‡∫î‡∫µ‡∫Å‡∫±‡∫ö‡∫ú‡∫π‡ªâ‡∫ñ‡∫∑‡∫Å‡∫•‡∫≤‡∫á‡∫ß‡∫±‡∫ô‡∫ó‡∫∏‡∫Å‡∫ó‡ªà‡∫≤‡∫ô!\n‚ú® ‡∫Ç‡ªç‡ªÉ‡∫´‡ªâ‡ªÇ‡∫ä‡∫Å‡∫î‡∫µ‡ªÉ‡∫ô‡∫Æ‡ªà‡∫≠‡∫ö‡ªú‡ªâ‡∫≤!`;

  await bot.sendMessage(TARGET_GROUP_ID, msg);
  await Bet.deleteMany({ round });
}, { timezone: TZ });

/* ===== Webhook ===== */
const WEBHOOK_URL = `${RENDER_EXTERNAL_URL}/bot${BOT_TOKEN}`;
bot.setWebHook(WEBHOOK_URL);
app.post(`/bot${BOT_TOKEN}`, (req, res) => {
  bot.processUpdate(req.body);
  res.sendStatus(200);
});
app.get("/", (_, res) => res.send("Lao Lotto Bot ‚úÖ"));

/* ===== Start server ===== */
const PORT = process.env.PORT || 3000;
app.listen(PORT, () => console.log(`üöÄ Server running on :${PORT} | Webhook -> ${WEBHOOK_URL}`));
